/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Korisnik;
import domen.Lokal;
import domen.Mesto;
import domen.TipLokala;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import model.Kontroler;
import table.model.TableModelLokali;
import table.model.TableModelLokali;
import util.Akcija;
import util.TransferKlasa;

/**
 *
 * @author Matija1
 */
public class AdminFormaLokal extends javax.swing.JFrame {

    /**
     * Creates new form AdminFormaLokal
     */
    TableModelLokali tml;
    public AdminFormaLokal() {
        initComponents();
        srediFormu();
    }
    private List<Lokal> listaLokala;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jComboKriterijum = new javax.swing.JComboBox();
        jtxtFilter = new javax.swing.JTextField();
        jbtResetujFilter = new javax.swing.JButton();
        jbtIzmena = new javax.swing.JButton();
        jbtBrisanje = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lblPoruka = new javax.swing.JLabel();
        jbtnUnesiLokale = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblLokali = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Kriterijum pretrage:");

        jComboKriterijum.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LokalID", "Email", "Naziv", "Sifra", "Mesto", "Adresa", "Tip lokala", "Broj telefona", " " }));
        jComboKriterijum.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboKriterijumItemStateChanged(evt);
            }
        });
        jComboKriterijum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboKriterijumActionPerformed(evt);
            }
        });

        jtxtFilter.setEditable(false);
        jtxtFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtFilterActionPerformed(evt);
            }
        });
        jtxtFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtFilterKeyReleased(evt);
            }
        });

        jbtResetujFilter.setText("Resetuj filter");
        jbtResetujFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtResetujFilterActionPerformed(evt);
            }
        });

        jbtIzmena.setText("Sacuvaj izmenu lokala");
        jbtIzmena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtIzmenaActionPerformed(evt);
            }
        });

        jbtBrisanje.setText("Obrisi lokal");
        jbtBrisanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBrisanjeActionPerformed(evt);
            }
        });

        jButton1.setText("Nazad");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblPoruka.setText(" ");

        jbtnUnesiLokale.setText("Unesi nove lokale");
        jbtnUnesiLokale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUnesiLokaleActionPerformed(evt);
            }
        });

        jtblLokali.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtblLokali);

        jButton2.setText("Unesi nove postove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jbtIzmena, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtBrisanje, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtResetujFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtxtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblPoruka, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jbtnUnesiLokale, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(521, 521, 521))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPoruka, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboKriterijum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtResetujFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtIzmena)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtBrisanje)
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnUnesiLokale)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboKriterijumItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboKriterijumItemStateChanged
        String izbor = jComboKriterijum.getSelectedItem().toString();
        if (izbor.startsWith("Bez")) {
            jtxtFilter.setEditable(false);
            jtxtFilter.setText("");
            srediTabelu(null);
            jtxtFilter.setBackground(Color.lightGray);
        } else {
            jtxtFilter.setEditable(true);
            jtxtFilter.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_jComboKriterijumItemStateChanged

    private void jtxtFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtFilterActionPerformed

    private void jtxtFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtFilterKeyReleased
        String polje = jComboKriterijum.getSelectedItem().toString();
        String filter = jtxtFilter.getText().toLowerCase();
        List<Lokal> listaTemp = new ArrayList<>();
        for (int i = 0; i < listaLokala.size(); i++) {
            listaTemp.add(i, listaLokala.get(i));
            
        }
//        LokalID
//Email
//Naziv
//Sifra
//Mesto
//Adresa
//Tip lokala
//Broj telefona
        switch (polje) {
            
            case "LokalID":
                for (int i = listaLokala.size() - 1; i >= 0; i--) {
                    if (!(listaLokala.get(i).getLokalID()+ "").contains(filter)) {
                        listaTemp.remove(i);
                    }
                }
                break;
            case "Naziv":
                for (int i = listaLokala.size() - 1; i >= 0; i--) {
                    if (!listaLokala.get(i).getNaziv().toLowerCase().contains(filter)) {
                        listaTemp.remove(i);
                    }
                }
                break;
            case "Email":
                for (int i = listaLokala.size() - 1; i >= 0; i--) {
                    if (!(listaLokala.get(i).getEmail()).contains(filter)) {
                        listaTemp.remove(i);
                    }
                }
                break;
            case "Sifra":
                for (int i = listaLokala.size() - 1; i >= 0; i--) {
                    if (!(listaLokala.get(i).getSifra()).contains(filter)) {
                        listaTemp.remove(i);
                    }
                }
                break;
            case "Mesto":
                for (int i = listaLokala.size() - 1; i >= 0; i--) {
                    if (!(listaLokala.get(i).getMesto().getNaziv().toLowerCase()).contains(filter)) {
                        listaTemp.remove(i);
                    }
                }
                break;
            case "Adresa":
                for (int i = listaLokala.size() - 1; i >= 0; i--) {
                    if (!(listaLokala.get(i).getAdresa().toLowerCase()).contains(filter)) {
                        listaTemp.remove(i);
                    }
                }
                break;
            case "Tip lokala":
                for (int i = listaLokala.size() - 1; i >= 0; i--) {
                    if (!(listaLokala.get(i).getTip().getNaziv().toLowerCase()).contains(filter)) {
                        listaTemp.remove(i);
                    }
                }
                break;    
            case "Broj telefona":
                for (int i = listaLokala.size() - 1; i >= 0; i--) {
                    if (!(listaLokala.get(i).getBrojTelefona().toLowerCase()).contains(filter)) {
                        listaTemp.remove(i);
                    }
                }
                break;
        }
        tml.setListaKorisnika(listaTemp);
    }//GEN-LAST:event_jtxtFilterKeyReleased

    private void jbtResetujFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtResetujFilterActionPerformed
         jComboKriterijum.setSelectedIndex(0);
    }//GEN-LAST:event_jbtResetujFilterActionPerformed

    private void jbtIzmenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtIzmenaActionPerformed
        lblPoruka.setText(" ");
        int r = jtblLokali.getSelectedRow();
        if (r < 0) {
            lblPoruka.setText("Morate prvo odabrati zaposlenog!");
            return;
        }
        Lokal l = new Lokal();
        l.setLokalID((int)jtblLokali.getValueAt(r, 0));
        l.setEmail(jtblLokali.getValueAt(r, 1).toString());
        l.setNaziv(jtblLokali.getValueAt(r, 2).toString());
        l.setSifra(jtblLokali.getValueAt(r, 3).toString());
        l.setMesto((Mesto) jtblLokali.getValueAt(r, 4));
        l.setAdresa(jtblLokali.getValueAt(r, 5).toString());
        l.setTip((TipLokala) jtblLokali.getValueAt(r, 6));
        l.setBrojTelefona(jtblLokali.getValueAt(r, 7).toString());

        try {
            TransferKlasa zahtev = new TransferKlasa();
            zahtev.setOperacija(Akcija.SACUVAJ_IZMENU_LOKALA);
            zahtev.setParametar(l);
            Kontroler.getINSTANCE().posalji(zahtev);
            TransferKlasa odgovor = Kontroler.getINSTANCE().primi();
            JOptionPane.showMessageDialog(this, "Sistem je uspeo da sacuva izmenu lokala", "Poruka", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "GRESKA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtIzmenaActionPerformed

    private void jbtBrisanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBrisanjeActionPerformed
        lblPoruka.setText(" ");
        int r = jtblLokali.getSelectedRow();
        if (r < 0) {
            lblPoruka.setText("Morate prvo odabrati lokal!");
            return;
        }
        Lokal l = new Lokal();
        l.setLokalID((int) jtblLokali.getValueAt(r, 0));

        try {
            TransferKlasa zahtev = new TransferKlasa();
            zahtev.setOperacija(Akcija.BRISI_LOKAL);
            zahtev.setParametar(l);
            Kontroler.getINSTANCE().posalji(zahtev);
            TransferKlasa odgovor = Kontroler.getINSTANCE().primi();
            JOptionPane.showMessageDialog(this, "Sistem je uspeo da obrise lokal", "Poruka", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "GRESKA", JOptionPane.ERROR_MESSAGE);
            lblPoruka.setText("Nije moguce obrisati.");
            return;
        }
        try {
            TransferKlasa zahtev = new TransferKlasa();
            zahtev.setOperacija(Akcija.VRATI_SVE_LOKALE);
            Kontroler.getINSTANCE().posalji(zahtev);
            TransferKlasa odgovor = Kontroler.getINSTANCE().primi();
            List<Korisnik> zap = (List<Korisnik>) odgovor.getRezultat();
            srediTabelu(zap);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem nije uspeo da ucita lokale.", "GRESKA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtBrisanjeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            AdminForma af = new AdminForma();
            af.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(AdminForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbtnUnesiLokaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUnesiLokaleActionPerformed
        UnosLokala ul = new UnosLokala();
        ul.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbtnUnesiLokaleActionPerformed

    private void jComboKriterijumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboKriterijumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboKriterijumActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        UnosPostovaAdmin upa = new UnosPostovaAdmin();
        upa.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminFormaLokal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminFormaLokal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminFormaLokal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminFormaLokal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminFormaLokal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboKriterijum;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtBrisanje;
    private javax.swing.JButton jbtIzmena;
    private javax.swing.JButton jbtResetujFilter;
    private javax.swing.JButton jbtnUnesiLokale;
    private javax.swing.JTable jtblLokali;
    private javax.swing.JTextField jtxtFilter;
    private javax.swing.JLabel lblPoruka;
    // End of variables declaration//GEN-END:variables

private void srediFormu() {
        setTitle("Admin - Rad sa lokalima");
        srediTabelu(null);
    }

    private void srediTabelu(List<Korisnik> lk) {
        try {
//            if (lk == null) {
            TransferKlasa zahtev = new TransferKlasa();
            zahtev.setOperacija(Akcija.VRATI_SVE_LOKALE);
            Kontroler.getINSTANCE().posalji(zahtev);
            TransferKlasa odgovor = Kontroler.getINSTANCE().primi();
            listaLokala = (List<Lokal>) odgovor.getRezultat();
            
            zahtev.setOperacija(Akcija.VRATI_SVA_MESTA);
            Kontroler.getINSTANCE().posalji(zahtev);
            odgovor = Kontroler.getINSTANCE().primi();
            List<Mesto> listaMesta = (List<Mesto>) odgovor.getRezultat();
            
            zahtev.setOperacija(Akcija.VRATI_SVE_TIPOVE);
            Kontroler.getINSTANCE().posalji(zahtev);
            odgovor = Kontroler.getINSTANCE().primi();
            List<TipLokala> listaTipova = (List<TipLokala>) odgovor.getRezultat();

            tml = new TableModelLokali(listaLokala);
            jtblLokali.setModel(tml);
            TableColumnModel tcm = jtblLokali.getColumnModel();
            TableColumn tc = tcm.getColumn(4);
            JComboBox jcb = new JComboBox();

            jcb.setModel(new DefaultComboBoxModel(listaMesta.toArray()));
            tc.setCellEditor(new DefaultCellEditor(jcb));
            
            tc = tcm.getColumn(6);
            JComboBox jcb1 = new JComboBox();
            
            jcb1.setModel(new DefaultComboBoxModel(listaTipova.toArray()));
            tc.setCellEditor(new DefaultCellEditor(jcb1));
            
            jtblLokali.setAutoCreateRowSorter(true);
            jtblLokali.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            jtblLokali.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "GRESKA", JOptionPane.ERROR_MESSAGE);
        }
    }

}
